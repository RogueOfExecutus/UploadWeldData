/* soapMesFrameWorkSoapProxy.h
   Generated by gSOAP 2.8.74 for MesFrameWork.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapMesFrameWorkSoapProxy_H
#define soapMesFrameWorkSoapProxy_H
#include "soapH.h"

    class SOAP_CMAC MesFrameWorkSoapProxy : public soap {
      public:
        /// Endpoint URL of service 'MesFrameWorkSoapProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in MesFrameWork.h, if any
        /// Construct a proxy with new managing context
        MesFrameWorkSoapProxy();
        /// Copy constructor
        MesFrameWorkSoapProxy(const MesFrameWorkSoapProxy& rhs);
        /// Construct proxy given a managing context
        MesFrameWorkSoapProxy(const struct soap&);
        /// Construct proxy given a managing context and endpoint URL
        MesFrameWorkSoapProxy(const struct soap&, const char *soap_endpoint_url);
        /// Constructor taking an endpoint URL
        MesFrameWorkSoapProxy(const char *soap_endpoint_url);
        /// Constructor taking input and output mode flags for the new managing context
        MesFrameWorkSoapProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        MesFrameWorkSoapProxy(const char *soap_endpoint_url, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        MesFrameWorkSoapProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and managing context
        virtual ~MesFrameWorkSoapProxy();
        /// Initializer used by constructors
        virtual void MesFrameWorkSoapProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual MesFrameWorkSoapProxy *copy();
        /// Copy assignment
        MesFrameWorkSoapProxy& operator=(const MesFrameWorkSoapProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault subcode QName string (NULL when absent)
        virtual const char *soap_fault_subcode();
        /// Get SOAP Fault string/reason (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail XML string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        /// Web service operation 'GetString' to the default endpoint with the default SOAP Action header, returns SOAP_OK or error code
        virtual int GetString(_ns1__GetString *ns1__GetString, _ns1__GetStringResponse &ns1__GetStringResponse) { return this->GetString(NULL, NULL, ns1__GetString, ns1__GetStringResponse); }
        /// Web service operation 'GetString' to an endpoint with a SOAP Action header, returns SOAP_OK or error code
        virtual int GetString(const char *soap_endpoint_url, const char *soap_action, _ns1__GetString *ns1__GetString, _ns1__GetStringResponse &ns1__GetStringResponse);
        /// Web service operation 'DxTestDataUpload' to the default endpoint with the default SOAP Action header, returns SOAP_OK or error code
        virtual int DxTestDataUpload(_ns1__DxTestDataUpload *ns1__DxTestDataUpload, _ns1__DxTestDataUploadResponse &ns1__DxTestDataUploadResponse) { return this->DxTestDataUpload(NULL, NULL, ns1__DxTestDataUpload, ns1__DxTestDataUploadResponse); }
        /// Web service operation 'DxTestDataUpload' to an endpoint with a SOAP Action header, returns SOAP_OK or error code
        virtual int DxTestDataUpload(const char *soap_endpoint_url, const char *soap_action, _ns1__DxTestDataUpload *ns1__DxTestDataUpload, _ns1__DxTestDataUploadResponse &ns1__DxTestDataUploadResponse);
        /// Web service operation 'Device_Parameters' to the default endpoint with the default SOAP Action header, returns SOAP_OK or error code
        virtual int Device_USCOREParameters(_ns1__Device_USCOREParameters *ns1__Device_USCOREParameters, _ns1__Device_USCOREParametersResponse &ns1__Device_USCOREParametersResponse) { return this->Device_USCOREParameters(NULL, NULL, ns1__Device_USCOREParameters, ns1__Device_USCOREParametersResponse); }
        /// Web service operation 'Device_Parameters' to an endpoint with a SOAP Action header, returns SOAP_OK or error code
        virtual int Device_USCOREParameters(const char *soap_endpoint_url, const char *soap_action, _ns1__Device_USCOREParameters *ns1__Device_USCOREParameters, _ns1__Device_USCOREParametersResponse &ns1__Device_USCOREParametersResponse);
        /// Web service operation 'DSDataCreateJSON' to the default endpoint with the default SOAP Action header, returns SOAP_OK or error code
        virtual int DSDataCreateJSON(_ns1__DSDataCreateJSON *ns1__DSDataCreateJSON, _ns1__DSDataCreateJSONResponse &ns1__DSDataCreateJSONResponse) { return this->DSDataCreateJSON(NULL, NULL, ns1__DSDataCreateJSON, ns1__DSDataCreateJSONResponse); }
        /// Web service operation 'DSDataCreateJSON' to an endpoint with a SOAP Action header, returns SOAP_OK or error code
        virtual int DSDataCreateJSON(const char *soap_endpoint_url, const char *soap_action, _ns1__DSDataCreateJSON *ns1__DSDataCreateJSON, _ns1__DSDataCreateJSONResponse &ns1__DSDataCreateJSONResponse);
        /// Web service operation 'DxDataUploadJson' to the default endpoint with the default SOAP Action header, returns SOAP_OK or error code
        virtual int DxDataUploadJson(_ns1__DxDataUploadJson *ns1__DxDataUploadJson, _ns1__DxDataUploadJsonResponse &ns1__DxDataUploadJsonResponse) { return this->DxDataUploadJson(NULL, NULL, ns1__DxDataUploadJson, ns1__DxDataUploadJsonResponse); }
        /// Web service operation 'DxDataUploadJson' to an endpoint with a SOAP Action header, returns SOAP_OK or error code
        virtual int DxDataUploadJson(const char *soap_endpoint_url, const char *soap_action, _ns1__DxDataUploadJson *ns1__DxDataUploadJson, _ns1__DxDataUploadJsonResponse &ns1__DxDataUploadJsonResponse);
        /// Web service operation 'GetString' to the default endpoint with the default SOAP Action header, returns SOAP_OK or error code
        virtual int GetString_(_ns1__GetString *ns1__GetString, _ns1__GetStringResponse &ns1__GetStringResponse) { return this->GetString_(NULL, NULL, ns1__GetString, ns1__GetStringResponse); }
        /// Web service operation 'GetString' to an endpoint with a SOAP Action header, returns SOAP_OK or error code
        virtual int GetString_(const char *soap_endpoint_url, const char *soap_action, _ns1__GetString *ns1__GetString, _ns1__GetStringResponse &ns1__GetStringResponse);
        /// Web service operation 'DxTestDataUpload' to the default endpoint with the default SOAP Action header, returns SOAP_OK or error code
        virtual int DxTestDataUpload_(_ns1__DxTestDataUpload *ns1__DxTestDataUpload, _ns1__DxTestDataUploadResponse &ns1__DxTestDataUploadResponse) { return this->DxTestDataUpload_(NULL, NULL, ns1__DxTestDataUpload, ns1__DxTestDataUploadResponse); }
        /// Web service operation 'DxTestDataUpload' to an endpoint with a SOAP Action header, returns SOAP_OK or error code
        virtual int DxTestDataUpload_(const char *soap_endpoint_url, const char *soap_action, _ns1__DxTestDataUpload *ns1__DxTestDataUpload, _ns1__DxTestDataUploadResponse &ns1__DxTestDataUploadResponse);
        /// Web service operation 'Device_Parameters' to the default endpoint with the default SOAP Action header, returns SOAP_OK or error code
        virtual int Device_USCOREParameters_(_ns1__Device_USCOREParameters *ns1__Device_USCOREParameters, _ns1__Device_USCOREParametersResponse &ns1__Device_USCOREParametersResponse) { return this->Device_USCOREParameters_(NULL, NULL, ns1__Device_USCOREParameters, ns1__Device_USCOREParametersResponse); }
        /// Web service operation 'Device_Parameters' to an endpoint with a SOAP Action header, returns SOAP_OK or error code
        virtual int Device_USCOREParameters_(const char *soap_endpoint_url, const char *soap_action, _ns1__Device_USCOREParameters *ns1__Device_USCOREParameters, _ns1__Device_USCOREParametersResponse &ns1__Device_USCOREParametersResponse);
        /// Web service operation 'DSDataCreateJSON' to the default endpoint with the default SOAP Action header, returns SOAP_OK or error code
        virtual int DSDataCreateJSON_(_ns1__DSDataCreateJSON *ns1__DSDataCreateJSON, _ns1__DSDataCreateJSONResponse &ns1__DSDataCreateJSONResponse) { return this->DSDataCreateJSON_(NULL, NULL, ns1__DSDataCreateJSON, ns1__DSDataCreateJSONResponse); }
        /// Web service operation 'DSDataCreateJSON' to an endpoint with a SOAP Action header, returns SOAP_OK or error code
        virtual int DSDataCreateJSON_(const char *soap_endpoint_url, const char *soap_action, _ns1__DSDataCreateJSON *ns1__DSDataCreateJSON, _ns1__DSDataCreateJSONResponse &ns1__DSDataCreateJSONResponse);
        /// Web service operation 'DxDataUploadJson' to the default endpoint with the default SOAP Action header, returns SOAP_OK or error code
        virtual int DxDataUploadJson_(_ns1__DxDataUploadJson *ns1__DxDataUploadJson, _ns1__DxDataUploadJsonResponse &ns1__DxDataUploadJsonResponse) { return this->DxDataUploadJson_(NULL, NULL, ns1__DxDataUploadJson, ns1__DxDataUploadJsonResponse); }
        /// Web service operation 'DxDataUploadJson' to an endpoint with a SOAP Action header, returns SOAP_OK or error code
        virtual int DxDataUploadJson_(const char *soap_endpoint_url, const char *soap_action, _ns1__DxDataUploadJson *ns1__DxDataUploadJson, _ns1__DxDataUploadJsonResponse &ns1__DxDataUploadJsonResponse);
    };
#endif
